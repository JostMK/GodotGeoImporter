name: Main

on:
  push:
    paths-ignore:
      - '.gitignore'
      - '*.md'

jobs:
  lint:
    name: Lint (Clang Format)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Run clang-format style check
        uses: jidicula/clang-format-action@v4.14.0
        with:
          clang-format-version: '19'
          exclude-regex: 'extern'

  build:
    strategy:
      fail-fast: false
      matrix:
        build_type: [ 'Debug', 'Release' ]
        config:
          - { name: 'macOS Clang', os: macos-latest }
          - { name: 'Linux GCC', os: ubuntu-latest }
          - { name: 'Windows MSVC', os: windows-latest }

    name: ðŸ›  Build / ${{ matrix.config.name }} (${{ matrix.build_type }})
    runs-on: ${{ matrix.config.os }}
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          submodules: recursive

      - name: Install Dependencies (macOS)
        if: matrix.config.os == 'macos-latest'
        run: brew install ccache ninja

      - name: Install Dependencies (Linux)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y ccache ninja-build

      - name: Install Dependencies (Windows)
        if: matrix.config.os == 'windows-latest'
        run: |
          choco upgrade ninja

      - name: Setup MSVC (Windows)
        if: matrix.config.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1.13.0

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2.17
        with:
          max-size: '10G'
          key: ${{ matrix.config.os }}-${{ matrix.build_type }}
          variant: ${{ matrix.config.os == 'windows-latest' && 'sccache' || 'ccache' }}

      - name: Configure
        run: >
          mkdir GDExtension-build

          cmake
          -B GDExtension-build
          -G "Ninja"
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          --install-prefix ${{ github.workspace }}/install-${{ matrix.build_type }}
          .

      - name: Build
        run: cmake --build GDExtension-build

      - name: Install
        run: cmake --install GDExtension-build

      - name: Upload artifact (Debug)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ matrix.config.os }}-${{ matrix.build_type }}
          path: |
            ${{ github.workspace }}/install-${{ matrix.build_type }}/*